// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Warehouse_operationsApp.Data;

#nullable disable

namespace Warehouse_operationsApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250513200452_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Warehouse_operationsApp.Models.Doljnosti", b =>
                {
                    b.Property<int>("id_doljnosti")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_doljnosti"));

                    b.Property<string>("Post")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_doljnosti");

                    b.ToTable("Doljnostis");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Information_about_documents", b =>
                {
                    b.Property<int>("id_inf_doc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_inf_doc"));

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("[Quanity] * [Cost]", true);

                    b.Property<int>("Quanity")
                        .HasColumnType("int");

                    b.Property<int>("id_Product")
                        .HasColumnType("int");

                    b.Property<int>("id_doc")
                        .HasColumnType("int");

                    b.Property<int>("id_suppliers")
                        .HasColumnType("int");

                    b.HasKey("id_inf_doc");

                    b.HasIndex("id_Product")
                        .IsUnique();

                    b.HasIndex("id_doc");

                    b.HasIndex("id_suppliers");

                    b.ToTable("Information_About_Documentss");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Ostatki", b =>
                {
                    b.Property<int>("id_Ostatki")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Ostatki"));

                    b.Property<int>("Quantity_Ostatki")
                        .HasColumnType("int");

                    b.Property<int>("id_Product")
                        .HasColumnType("int");

                    b.Property<int>("id_warehouses")
                        .HasColumnType("int");

                    b.HasKey("id_Ostatki");

                    b.HasIndex("id_Product");

                    b.HasIndex("id_warehouses");

                    b.ToTable("Ostatkis");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Product", b =>
                {
                    b.Property<int>("id_Product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Product"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("id_product_type")
                        .HasColumnType("int");

                    b.Property<int>("id_unit")
                        .HasColumnType("int");

                    b.Property<string>("vendor_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_Product");

                    b.HasIndex("id_product_type");

                    b.HasIndex("id_unit");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Product_type", b =>
                {
                    b.Property<int>("id_product_type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_product_type"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_product_type");

                    b.ToTable("Product_Types");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Receipt_and_expense_documents", b =>
                {
                    b.Property<int>("id_doc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_doc"));

                    b.Property<bool>("ReceiptAndexpense_documents")
                        .HasColumnType("bit");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_users")
                        .HasColumnType("int");

                    b.HasKey("id_doc");

                    b.HasIndex("id_users");

                    b.ToTable("Receipt_And_Expense_Documentss");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Suppliers", b =>
                {
                    b.Property<int>("id_suppliers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_suppliers"));

                    b.Property<string>("Contact_Information")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_suppliers");

                    b.ToTable("Supplierss");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Unit", b =>
                {
                    b.Property<int>("id_unit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_unit"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_unit");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Users", b =>
                {
                    b.Property<int>("id_users")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_users"));

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_doljnosti")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_users");

                    b.HasIndex("id_doljnosti");

                    b.ToTable("Userss");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Warehouses", b =>
                {
                    b.Property<int>("id_warehouses")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_warehouses"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_users")
                        .HasColumnType("int");

                    b.HasKey("id_warehouses");

                    b.HasIndex("id_users");

                    b.ToTable("Warehousess");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Information_about_documents", b =>
                {
                    b.HasOne("Warehouse_operationsApp.Models.Product", "Product")
                        .WithOne("Information_about_documents")
                        .HasForeignKey("Warehouse_operationsApp.Models.Information_about_documents", "id_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Warehouse_operationsApp.Models.Receipt_and_expense_documents", "Receipt_and_expense_documents")
                        .WithMany("Information_about_documents")
                        .HasForeignKey("id_doc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Warehouse_operationsApp.Models.Suppliers", "Suppliers")
                        .WithMany("Information_about_documents")
                        .HasForeignKey("id_suppliers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Receipt_and_expense_documents");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Ostatki", b =>
                {
                    b.HasOne("Warehouse_operationsApp.Models.Product", "Product")
                        .WithMany("Ostatki")
                        .HasForeignKey("id_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Warehouse_operationsApp.Models.Warehouses", "Warehouses")
                        .WithMany("Ostatki")
                        .HasForeignKey("id_warehouses")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Product", b =>
                {
                    b.HasOne("Warehouse_operationsApp.Models.Product_type", "Product_type")
                        .WithMany("Product")
                        .HasForeignKey("id_product_type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Warehouse_operationsApp.Models.Unit", "Unit")
                        .WithMany("Product")
                        .HasForeignKey("id_unit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product_type");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Receipt_and_expense_documents", b =>
                {
                    b.HasOne("Warehouse_operationsApp.Models.Users", "Users")
                        .WithMany("Receipt_and_expense_documents")
                        .HasForeignKey("id_users")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Users", b =>
                {
                    b.HasOne("Warehouse_operationsApp.Models.Doljnosti", "Doljnosti")
                        .WithMany("Users")
                        .HasForeignKey("id_doljnosti")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doljnosti");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Warehouses", b =>
                {
                    b.HasOne("Warehouse_operationsApp.Models.Users", "Users")
                        .WithMany("Warehouses")
                        .HasForeignKey("id_users")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Doljnosti", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Product", b =>
                {
                    b.Navigation("Information_about_documents")
                        .IsRequired();

                    b.Navigation("Ostatki");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Product_type", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Receipt_and_expense_documents", b =>
                {
                    b.Navigation("Information_about_documents");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Suppliers", b =>
                {
                    b.Navigation("Information_about_documents");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Unit", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Users", b =>
                {
                    b.Navigation("Receipt_and_expense_documents");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Warehouse_operationsApp.Models.Warehouses", b =>
                {
                    b.Navigation("Ostatki");
                });
#pragma warning restore 612, 618
        }
    }
}
